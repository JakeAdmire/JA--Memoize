// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    frontContent={
      Object {
        "problem": "",
      }
    }
    nextCard={[MockFunction]}
    prevCard={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          className="left"
          onClick={[Function]}
        >
          PREVIOUS
          <span />
        </button>,
        <button
          className="right"
          onClick={[Function]}
        >
          SKIP
          <span />
        </button>,
        <span
          className="card-counter"
        >
          1
        </span>,
        <div
          className="card-front"
        >
          <h3>
            What prototype would you use to..
          </h3>
          <h3>
            
          </h3>
          <h4
            className="snippet"
          />
        </div>,
        <Answers
          showResults={[Function]}
        />,
      ],
      "className": "card ",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "PREVIOUS",
            <span />,
          ],
          "className": "left",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          "PREVIOUS",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "span",
          },
        ],
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "SKIP",
            <span />,
          ],
          "className": "right",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          "SKIP",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "span",
          },
        ],
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": 1,
          "className": "card-counter",
        },
        "ref": null,
        "rendered": 1,
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3>
              What prototype would you use to..
            </h3>,
            <h3>
              
            </h3>,
            <h4
              className="snippet"
            />,
          ],
          "className": "card-front",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "What prototype would you use to..",
            },
            "ref": null,
            "rendered": "What prototype would you use to..",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
            },
            "ref": null,
            "rendered": "",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "snippet",
            },
            "ref": null,
            "rendered": null,
            "type": "h4",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "answers": undefined,
          "correctAnswer": undefined,
          "showResults": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            className="left"
            onClick={[Function]}
          >
            PREVIOUS
            <span />
          </button>,
          <button
            className="right"
            onClick={[Function]}
          >
            SKIP
            <span />
          </button>,
          <span
            className="card-counter"
          >
            1
          </span>,
          <div
            className="card-front"
          >
            <h3>
              What prototype would you use to..
            </h3>
            <h3>
              
            </h3>
            <h4
              className="snippet"
            />
          </div>,
          <Answers
            showResults={[Function]}
          />,
        ],
        "className": "card ",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "PREVIOUS",
              <span />,
            ],
            "className": "left",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "PREVIOUS",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "span",
            },
          ],
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "SKIP",
              <span />,
            ],
            "className": "right",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "SKIP",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "span",
            },
          ],
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 1,
            "className": "card-counter",
          },
          "ref": null,
          "rendered": 1,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3>
                What prototype would you use to..
              </h3>,
              <h3>
                
              </h3>,
              <h4
                className="snippet"
              />,
            ],
            "className": "card-front",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "What prototype would you use to..",
              },
              "ref": null,
              "rendered": "What prototype would you use to..",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
              },
              "ref": null,
              "rendered": "",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "snippet",
              },
              "ref": null,
              "rendered": null,
              "type": "h4",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "answers": undefined,
            "correctAnswer": undefined,
            "showResults": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
